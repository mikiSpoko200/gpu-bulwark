\babel@toc {polish}{}\relax 
\babel@toc {english}{}\relax 
\babel@toc {polish}{}\relax 
\babel@toc {english}{}\relax 
\babel@toc {polish}{}\relax 
\babel@toc {english}{}\relax 
\babel@toc {english}{}\relax 
\babel@toc {polish}{}\relax 
\babel@toc {english}{}\relax 
\babel@toc {polish}{}\relax 
\babel@toc {english}{}\relax 
\contentsline {chapter}{\numberline {1}The Rust programming language}{11}{chapter.1}%
\contentsline {section}{\numberline {1.1}Data types}{13}{section.1.1}%
\contentsline {section}{\numberline {1.2}Built--in Rust Types}{13}{section.1.2}%
\contentsline {subsection}{\numberline {1.2.1}Scalars}{13}{subsection.1.2.1}%
\contentsline {subsection}{\numberline {1.2.2}Character (\texttt {char})}{14}{subsection.1.2.2}%
\contentsline {subsection}{\numberline {1.2.3}Tuples}{14}{subsection.1.2.3}%
\contentsline {subsection}{\numberline {1.2.4}Array}{14}{subsection.1.2.4}%
\contentsline {subsection}{\numberline {1.2.5}Slice}{14}{subsection.1.2.5}%
\contentsline {subsection}{\numberline {1.2.6}\texttt {str}}{15}{subsection.1.2.6}%
\contentsline {subsection}{\numberline {1.2.7}User defined types}{15}{subsection.1.2.7}%
\contentsline {subsubsection}{\texttt {struct}s}{15}{section*.4}%
\contentsline {subsubsection}{\texttt {enum}s}{15}{section*.5}%
\contentsline {section}{\numberline {1.3}Implementations}{16}{section.1.3}%
\contentsline {subsection}{\numberline {1.3.1}Inherent implementations}{16}{subsection.1.3.1}%
\contentsline {section}{\numberline {1.4}Generic types}{16}{section.1.4}%
\contentsline {subsection}{\numberline {1.4.1}Type parameters}{17}{subsection.1.4.1}%
\contentsline {subsection}{\numberline {1.4.2}Constant parameters}{17}{subsection.1.4.2}%
\contentsline {subsection}{\numberline {1.4.3}Lifetime parameters}{17}{subsection.1.4.3}%
\contentsline {subsection}{\numberline {1.4.4}Type Aliases}{18}{subsection.1.4.4}%
\contentsline {section}{\numberline {1.5}Traits}{18}{section.1.5}%
\contentsline {subsection}{\numberline {1.5.1}Associated functions and methods}{19}{subsection.1.5.1}%
\contentsline {subsection}{\numberline {1.5.2}Associated types}{19}{subsection.1.5.2}%
\contentsline {subsection}{\numberline {1.5.3}Associated Constants}{19}{subsection.1.5.3}%
\contentsline {section}{\numberline {1.6}Implementation Coherence}{20}{section.1.6}%
\contentsline {section}{\numberline {1.7}Orphan rules}{20}{section.1.7}%
\contentsline {chapter}{\numberline {2}OpenGL and GLSL}{21}{chapter.2}%
\contentsline {section}{\numberline {2.1}Introduction}{21}{section.2.1}%
\contentsline {section}{\numberline {2.2}History}{21}{section.2.2}%
\contentsline {section}{\numberline {2.3}OpenGL objects}{21}{section.2.3}%
\contentsline {subsection}{\numberline {2.3.1}Buffer object}{22}{subsection.2.3.1}%
\contentsline {subsection}{\numberline {2.3.2}Vertex Array object}{22}{subsection.2.3.2}%
\contentsline {section}{\numberline {2.4}Graphics pipeline}{23}{section.2.4}%
\contentsline {subsection}{\numberline {2.4.1}Vertex Specification}{23}{subsection.2.4.1}%
\contentsline {subsection}{\numberline {2.4.2}Vertex Shader}{23}{subsection.2.4.2}%
\contentsline {subsection}{\numberline {2.4.3}Tessellation}{24}{subsection.2.4.3}%
\contentsline {subsection}{\numberline {2.4.4}Geometry shading}{24}{subsection.2.4.4}%
\contentsline {subsection}{\numberline {2.4.5}Fixed function vertex post--processing}{25}{subsection.2.4.5}%
\contentsline {subsection}{\numberline {2.4.6}Rasterization}{25}{subsection.2.4.6}%
\contentsline {subsection}{\numberline {2.4.7}Fragment processing}{26}{subsection.2.4.7}%
\contentsline {subsection}{\numberline {2.4.8}Fragment post processing}{26}{subsection.2.4.8}%
\contentsline {section}{\numberline {2.5}GLSL}{27}{section.2.5}%
\contentsline {subsection}{\numberline {2.5.1}Variables}{27}{subsection.2.5.1}%
\contentsline {subsection}{\numberline {2.5.2}Variable types}{28}{subsection.2.5.2}%
\contentsline {subsection}{\numberline {2.5.3}Variable storage qualifiers}{29}{subsection.2.5.3}%
\contentsline {subsection}{\numberline {2.5.4}Variable layout qualifiers}{29}{subsection.2.5.4}%
\contentsline {chapter}{\numberline {3}Existing solutions}{31}{chapter.3}%
\contentsline {section}{\numberline {3.1}Native C / C++ bindings}{31}{section.3.1}%
\contentsline {section}{\numberline {3.2}Rust with unsafe bindings}{32}{section.3.2}%
\contentsline {section}{\numberline {3.3}Rust graphics libraries}{33}{section.3.3}%
\contentsline {section}{\numberline {3.4}Conclusion}{33}{section.3.4}%
\contentsline {chapter}{\numberline {4}OpenGL wrapper library}{35}{chapter.4}%
\contentsline {section}{\numberline {4.1}External dependencies}{35}{section.4.1}%
\contentsline {section}{\numberline {4.2}Identified design patterns}{36}{section.4.2}%
\contentsline {subsection}{\numberline {4.2.1}Compensation for language limitations}{36}{subsection.4.2.1}%
\contentsline {subsubsection}{Variadic Generics}{36}{section*.8}%
\contentsline {paragraph}{Problem}{36}{section*.9}%
\contentsline {paragraph}{Solution}{37}{section*.10}%
\contentsline {paragraph}{Use case}{38}{section*.11}%
\contentsline {subsection}{\numberline {4.2.2}Const generics in const expressions}{38}{subsection.4.2.2}%
\contentsline {paragraph}{Problem}{38}{section*.12}%
\contentsline {paragraph}{Solution}{38}{section*.13}%
\contentsline {paragraph}{Use case}{39}{section*.14}%
\contentsline {subsection}{\numberline {4.2.3}Effect system}{39}{subsection.4.2.3}%
\contentsline {paragraph}{Problem}{39}{section*.15}%
\contentsline {paragraph}{Solution}{39}{section*.16}%
\contentsline {paragraph}{Use Case}{40}{section*.17}%
\contentsline {subsection}{\numberline {4.2.4}Subtyping}{40}{subsection.4.2.4}%
\contentsline {paragraph}{Problem}{40}{section*.18}%
\contentsline {paragraph}{Solution}{40}{section*.19}%
\contentsline {paragraph}{Use Case}{41}{section*.20}%
\contentsline {section}{\numberline {4.3}Validation of program structure at compile--time}{41}{section.4.3}%
\contentsline {subsection}{\numberline {4.3.1}Markers}{41}{subsection.4.3.1}%
\contentsline {paragraph}{Problem}{41}{section*.21}%
\contentsline {paragraph}{Solution}{41}{section*.22}%
\contentsline {paragraph}{Use Case}{43}{section*.23}%
\contentsline {paragraph}{many modes}{43}{section*.24}%
\contentsline {subsection}{\numberline {4.3.2}Type State}{43}{subsection.4.3.2}%
\contentsline {section}{\numberline {4.4}OpenGL wrapper}{47}{section.4.4}%
\contentsline {subsection}{\numberline {4.4.1}GLSL module}{47}{subsection.4.4.1}%
\contentsline {subsection}{\numberline {4.4.2}Shaders}{48}{subsection.4.4.2}%
\contentsline {subsection}{\numberline {4.4.3}Program}{48}{subsection.4.4.3}%
\contentsline {subsubsection}{Builder}{48}{section*.26}%
\contentsline {subsubsection}{Uniform Specification}{49}{section*.27}%
\contentsline {subsubsection}{Pipeline Configuration}{49}{section*.28}%
\contentsline {subsection}{\numberline {4.4.4}Buffer}{49}{subsection.4.4.4}%
\contentsline {subsection}{\numberline {4.4.5}Memory Mapping}{50}{subsection.4.4.5}%
\contentsline {subsection}{\numberline {4.4.6}Vertex Array}{50}{subsection.4.4.6}%
\contentsline {subsubsection}{Draw Calls}{50}{section*.29}%
\contentsline {subsection}{\numberline {4.4.7}Textures}{50}{subsection.4.4.7}%
\contentsline {subsubsection}{Storage}{51}{section*.30}%
\contentsline {subsubsection}{Image Format}{51}{section*.31}%
\contentsline {subsubsection}{Pixels}{52}{section*.32}%
\contentsline {section}{\numberline {4.5}Examples}{52}{section.4.5}%
\contentsline {chapter}{\numberline {5}Conclusions}{53}{chapter.5}%
\contentsline {section}{\numberline {5.1}Identified benefits of type--driven design for systems programming}{53}{section.5.1}%
\contentsline {section}{\numberline {5.2}Identified downsides of type--driven design for systems programming}{53}{section.5.2}%
\contentsline {section}{\numberline {5.3}What works}{54}{section.5.3}%
\contentsline {section}{\numberline {5.4}What could be improved}{54}{section.5.4}%
\contentsline {chapter}{Bibliography}{55}{chapter*.33}%
